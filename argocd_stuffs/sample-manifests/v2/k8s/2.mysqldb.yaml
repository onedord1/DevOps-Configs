apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  name: mysql-init-config
  namespace: prod-quickops
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS mail;
    GRANT ALL PRIVILEGES ON mail.* TO 'quickopsuser'@'%';
    
    -- Create developer user if not exists and grant readonly access
    CREATE USER IF NOT EXISTS 'developer'@'%' IDENTIFIED BY 'developer1234qa';
    GRANT SELECT ON quickops.* TO 'developer'@'%';
    FLUSH PRIVILEGES;

---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  name: mysql-secret
  namespace: prod-quickops
type: Opaque
data:
  mysql-root-password: eVE4OWNqOGlOcFB4M29xM2o3QXdmQXYyTQ==  # base64 encoded "yQ89cj8iNpPx3oq3j7AwfAv2M"
  mysql-database: cXVpY2tvcHM=                   # base64 encoded "quickops"
  mysql-user: cXVpY2tvcHN1c2Vy                # base64 encoded "quickopsuser"
  mysql-password: c014QTlUdEZDNzU5eFlvbnE4VDk= # base64 encoded "sMxA9TtFC759xYonq8T9"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "20"
  name: mysql
  namespace: prod-quickops  
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-database
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: init-sql-volume
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
            - name: mysql-data
              mountPath: /var/lib/mysql
          resources:
            requests:
              memory: "1Gi"
              cpu: "400m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: init-sql-volume
          configMap:
            name: mysql-init-config
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: do-block-storage

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "20"
  name: mysql
  namespace: prod-quickops
spec:
  ports:
    - port: 3306
      targetPort: 3306
  clusterIP: None
  selector:
    app: mysql