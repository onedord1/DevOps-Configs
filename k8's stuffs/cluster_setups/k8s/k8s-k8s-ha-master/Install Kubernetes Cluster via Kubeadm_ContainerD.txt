====================Disable Swap==================
sudo apt-get update
sudo swapoff -a
sudo vim /etc/fstab
sudo init 6

============configure modules required by containerd====================
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe br_netfilter
sudo modprobe overlay

============Configure some system parameters related to networking for Kubernetes and the Container Runtime Interface (CRI)====================
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sudo sysctl --system

========================Now is the time to install containerd==============================

sudo apt-get update
sudo apt-get install -y containerd

===========Modifying the containerd configuration to enable systemd cgroup integration===================
sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml
sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
cat /etc/containerd/config.toml

sudo systemctl restart containerd.service
sudo systemctl status containerd

============Install Kubernetes Management Tools, Kubeadm, Kubelet and Kubect====================
https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-using-native-package-management


sudo apt-get update
sudo apt-get install -y ca-certificates curl
sudo apt-get install -y apt-transport-https ca-certificates curl

echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


==========Only Master Server===========

# Kubernetes Cluster Init
sudo kubeadm init --apiserver-advertise-address=172.17.17.100  --pod-network-cidr=192.168.211.0/16 --cri-socket /run/containerd/containerd.sock --ignore-preflight-errors Swap


#Create kubeconfig file to use kubectl command
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


#Install Calico networking and network policy for on-premises deployments
#https://projectcalico.docs.tigera.io/getting-started/kubernetes/self-managed-onprem/onpremises
#https://docs.tigera.io/calico/latest/getting-started/kubernetes/self-managed-onprem/onpremises#install-calico-with-kubernetes-api-datastore-more-than-50-nodes
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/tigera-operator.yaml
curl https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/custom-resources.yaml -O
kubectl create -f custom-resources.yaml

===========Calico ctl====================
https://docs.tigera.io/calico/latest/reference/calicoctl/ipam/show

=============== Join the Node to the Cluster ========================

kubeadm token create --print-join-command
==========================================

sudo apt install nfs-common

sudo snap install helm --classic

helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner
helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \
    --set nfs.server=172.17.17.10 \
    --set nfs.path=/var/k8/data







