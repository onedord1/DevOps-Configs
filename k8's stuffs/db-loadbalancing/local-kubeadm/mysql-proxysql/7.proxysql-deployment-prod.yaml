apiVersion: v1
kind: Service
metadata:
  name: proxysql
  namespace: db-proxysql-prod
  labels:
    app: proxysql
spec:
  type: ClusterIP
  selector:
    app: proxysql
  ports:
    - name: mysql-proxy
      port: 6033
      targetPort: 6033
    - name: admin-proxy
      port: 6032
      targetPort: 6032
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: proxysql
  namespace: db-proxysql-prod
  labels:
    app: proxysql
spec:
  serviceName: proxysql
  replicas: 2
  selector:
    matchLabels:
      app: proxysql
  template:
    metadata:
      labels:
        app: proxysql
    spec:
      terminationGracePeriodSeconds: 300
      containers:
        - name: proxysql
          image: proxysql/proxysql:2.4.4
          ports:
            - containerPort: 6033
              name: mysql-proxy
            - containerPort: 6032
              name: admin-proxy
          volumeMounts:
            - name: proxysql-config
              mountPath: /etc/proxysql
          env:
            - name: PROXYSQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: proxysql-secret
                  key: admin-password
            - name: PROXYSQL_MONITOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: proxysql-secret
                  key: monitor-password
            # Optional: APP user credentials if you template them into config
            - name: APP_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: app-password
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          readinessProbe:
            exec:
              command:
                - "mysql"
                - "--protocol=TCP"
                - "-h"
                - "127.0.0.1"
                - "-P"
                - "6033"
                - "-u"
                - "admin"
                - "-padmin"
                - "-e"
                - "SELECT 1;"
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - "mysql"
                - "--protocol=TCP"
                - "-h"
                - "127.0.0.1"
                - "-P"
                - "6033"
                - "-u"
                - "admin"
                - "-padmin"
                - "-e"
                - "SELECT 1;"
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: proxysql-config
          configMap:
            name: proxysql-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxysql-config
  namespace: db-proxysql-prod
data:
  proxysql.cnf: |
    datadir="/var/lib/proxysql"
    admin_variables=
    {
      enabled = true
      admin_credentials="admin:admin"
      mysql_ifaces="0.0.0.0:6032"
    }
    mysql_variables=
    {
      threads=4
      max_connections=2048
      default_query_delay=0
      default_query_timeout=36000000
      interfaces="0.0.0.0:6033"
      poll_timeout=2000
      monitor_history=60000
      monitor_connect_interval=2000
      monitor_ping_interval=2000
      ping_interval_server_msec=10000
      ping_timeout_server=200
    }
    mysql_servers = (
      { address="mysql-write.db-proxysql-prod.svc.cluster.local", port=3306, hostgroup=10, max_connections=1000 },
      { address="mysql-read.db-proxysql-prod.svc.cluster.local", port=3306, hostgroup=20, max_connections=1000 }
      # Add additional replicas as needed
    )
    mysql_users = (
      { username="appuser", password="${APP_USER_PASSWORD}", default_hostgroup=10, transaction_persistent_hostgroup=10 },
      { username="monitor", password="${PROXYSQL_MONITOR_PASSWORD}", default_hostgroup=10 }
    )
    mysql_query_rules = (
      { rule_id=1, active=1, match_pattern="^SELECT .* FOR UPDATE", destination_hostgroup=10, apply=1 },
      { rule_id=2, active=1, match_pattern="^SELECT .*", destination_hostgroup=20, apply=1 },
      { rule_id=3, active=1, match_pattern="^INSERT .*|^UPDATE .*|^DELETE .*|^REPLACE .*", destination_hostgroup=10, apply=1 }
    )
    mysql_replication_hostgroups {
      writer_hostgroup = 10
      reader_hostgroup = 20
      comment = "writer/reader hostgroups"
    }
    mysql_monitor_username = "monitor"
    mysql_monitor_password = "${PROXYSQL_MONITOR_PASSWORD}"
    mysql_galera_hostgroups {
      writer_hostgroup = 10
      reader_hostgroup = 20
      check_type = "read_only"
    }
