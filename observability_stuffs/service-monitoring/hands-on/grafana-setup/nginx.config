# Redirect all HTTP traffic (IP access) to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name _;

    return 301 https://$host$request_uri;
}

# HTTPS access with basic authentication and reverse proxy to Prometheus
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name _;

    ssl_certificate /etc/nginx/ssl/prometheus.crt;
    ssl_certificate_key /etc/nginx/ssl/prometheus.key;  #self-sign certificates

    #    auth_basic "Restricted Access";
    #auth_basic_user_file /etc/nginx/.htpasswd;

# Config for Prometheus

#    location / {
#	auth_basic "Restricted Access";
#   	auth_basic_user_file /etc/nginx/.htpasswd;
#
#       proxy_pass http://localhost:9090;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#   }

    location /grafana/ {
        proxy_pass http://localhost:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Proxy Grafana Live WebSocket
    location /grafana/api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_pass http://localhost:3000/api/live/;
    }
}