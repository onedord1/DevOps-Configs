volumes:
  prometheus_data:
  influxdb_data:
  grafana_data:

networks:
  monitoring-net:
    driver: bridge

secrets:
  influxdb-username:
    file: ./secrets/influxdb_username.txt
  influxdb-password:
    file: ./secrets/influxdb_password.txt
  influxdb-admin-token:
    file: ./secrets/influxdb_admin_token.txt
  grafana-admin-pass:
    file: ./secrets/grafana_admin_pass.txt

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - monitoring-net
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - ./prometheus/discovery:/etc/prometheus/discovery:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
      - "--storage.tsdb.retention.size=40GB"
      - "--storage.tsdb.max-block-duration=2h"
    secrets:
      - influxdb-admin-token
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 3G
    restart: unless-stopped

  influxdb:
    image: influxdb:3.5-core
    container_name: influxdb
    networks:
      - monitoring-net
    ports:
      - "8086:8086"
      - "8181:8181"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME_FILE=/run/secrets/influxdb-username
      - DOCKER_INFLUXDB_INIT_PASSWORD_FILE=/run/secrets/influxdb-password
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE=/run/secrets/influxdb-admin-token
      - DOCKER_INFLUXDB_INIT_ORG=myorg
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_BUCKET_RETENTION=90d
    secrets:
      - influxdb-username
      - influxdb-password
      - influxdb-admin-token
    command:
      - "influxdb3"
      - "serve"
      - "--object-store=file"
      - "--data-dir=/var/lib/influxdb2"
      - "--node-id=monitoring-node0"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    restart: unless-stopped


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - monitoring-net
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana-admin-pass
      - GF_ALLOW_SIGN_UP=false
    secrets:
      - grafana-admin-pass
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    restart: unless-stopped
