---
# roles/calico-cni/tasks/main.yml

- name: Check if kubectl is available
  command: kubectl version --client
  delegate_to: localhost
  become: no
  register: kubectl_check
  changed_when: false
  ignore_errors: yes

- name: Fail if kubectl is not available
  fail:
    msg: "kubectl is not available on localhost. Please install kubectl and configure kubeconfig."
  when: kubectl_check.failed
  delegate_to: localhost
  become: no

- name: Check if Calico is already installed
  shell: |
    kubectl get installation.operator.tigera.io default -o jsonpath='{.metadata.name}' 2>/dev/null || echo "not-found"
  delegate_to: localhost
  become: no
  register: calico_check
  changed_when: false

- name: Debug - Show Calico installation status
  debug:
    msg: "Calico installation found: {{ calico_check.stdout != 'not-found' }}"

- name: Download Calico operator manifest
  get_url:
    url: "https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/tigera-operator.yaml"
    dest: "/tmp/tigera-operator.yaml"
    mode: '0644'
  delegate_to: localhost
  become: no

- name: Delete existing Calico installation if it exists
  shell: |
    kubectl delete -f /tmp/tigera-operator.yaml
    sleep 30
  delegate_to: localhost
  become: no
  when: calico_check.stdout != 'not-found'
  ignore_errors: yes

- name: Install Calico operator
  command: kubectl apply -f /tmp/tigera-operator.yaml
  delegate_to: localhost
  become: no
  register: operator_install

- name: Wait for operator to be ready
  shell: |
    kubectl wait --for=condition=available --timeout=600s deployment/tigera-operator -n tigera-operator
  delegate_to: localhost
  become: no
  register: operator_wait
  retries: 10
  delay: 30
  until: operator_wait.rc == 0

- name: Wait for CRDs to be available
  shell: |
    kubectl get crd installations.operator.tigera.io -o jsonpath='{.metadata.name}' 2>/dev/null || echo "not-found"
  delegate_to: localhost
  become: no
  register: crd_check
  retries: 20
  delay: 10
  until: crd_check.stdout == "installations.operator.tigera.io"

- name: Debug - Show CRD status
  debug:
    msg: "CRD available: {{ crd_check.stdout == 'installations.operator.tigera.io' }}"

- name: Create Calico installation manifest
  copy:
    dest: "/tmp/calico-installation.yaml"
    content: |
      apiVersion: operator.tigera.io/v1
      kind: Installation
      metadata:
        name: default
      spec:
        calicoNetwork:
          ipPools:
          - blockSize: 26
            cidr: {{ pod_network_cidr }}
            encapsulation: IPIP
            natOutgoing: Enabled
            nodeSelector: all()
          nodeAddressAutodetectionV4:
            firstFound: true
  delegate_to: localhost
  become: no

- name: Apply Calico installation
  command: kubectl apply -f /tmp/calico-installation.yaml
  delegate_to: localhost
  become: no

- name: Create Calico configuration for tolerations
  copy:
    dest: "/tmp/tigera-operator-patch.yaml"
    content: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: tigera-operator
        namespace: tigera-operator
      spec:
        template:
          spec:
            tolerations:
              - key: node-role.kubernetes.io/control-plane
                effect: NoSchedule
              - key: node-role.kubernetes.io/master
                effect: NoSchedule
              - key: "node.kubernetes.io/not-ready"
                operator: "Exists"
                effect: "NoExecute"
                tolerationSeconds: 300
              - key: "node.kubernetes.io/unreachable"
                operator: "Exists"
                effect: "NoExecute"
                tolerationSeconds: 300
  delegate_to: localhost
  become: no

- name: Apply tolerations to tigera-operator
  command: kubectl apply -f /tmp/tigera-operator-patch.yaml
  delegate_to: localhost
  become: no
  ignore_errors: yes

- name: Wait for Calico pods to be ready
  shell: |
    kubectl wait --for=condition=ready --timeout=600s -n calico-system pods -l k8s-app=calico-node
  delegate_to: localhost
  become: no
  register: calico_wait
  retries: 20
  delay: 30
  until: calico_wait.rc == 0

- name: Verify Calico installation
  command: kubectl get installation.operator.tigera.io default -o jsonpath='{.status.phase}'
  delegate_to: localhost
  become: no
  register: calico_status

- name: Show final Calico status
  debug:
    msg: "Calico installation status: {{ calico_status.stdout }}"

- name: Check node status after Calico installation
  command: kubectl get nodes -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.conditions[?(@.type=="Ready")].status}{"\t"}{.status.conditions[?(@.type=="Ready")].message}{"\n"}{end}'
  delegate_to: localhost
  become: no
  register: node_status

- name: Debug - Show final node status
  debug:
    msg: |
      {% for line in node_status.stdout.split('\n') %}
      {{ line }}
      {% endfor %}

- name: Check CoreDNS pods status
  command: kubectl get pods -n kube-system -l k8s-app=kube-dns --no-headers
  delegate_to: localhost
  become: no
  register: coredns_pods

- name: Debug - Show CoreDNS pods status
  debug:
    msg: |
      {% for line in coredns_pods.stdout_lines %}
      {{ line }}
      {% endfor %}

- name: Clean up temporary files
  file:
    path: "{{ item }}"
    state: absent
  delegate_to: localhost
  become: no
  with_items:
    - /tmp/tigera-operator.yaml
    - /tmp/calico-installation.yaml
    - /tmp/tigera-operator-patch.yaml
  ignore_errors: yes